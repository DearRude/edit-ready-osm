name: Build Pre-Migrated PostGIS Image

on:
  workflow_dispatch: # Allows manual triggering 

permissions:
  contents: read      # To checkout the repository
  packages: write     # To push images to GitHub Container Registry

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Define Image Metadata
        id: meta
        # Extract metadata (tags, labels) for Docker
        # See https://github.com/docker/metadata-action
        # Using owner name (lowercase) and repo name for the image path
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/$OWNER/$REPO/openstreetmap-postgis"
          DATE_TAG=$(date +%Y%m%d)
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "TAGS=${IMAGE_NAME}:${DATE_TAG},${IMAGE_NAME}:latest" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./migration # Use the migration directory as build context
          file: ./migration/Dockerfile # Explicitly point to the Dockerfile
          push: true # Push the image to the registry
          tags: ${{ steps.meta.outputs.TAGS }}
          # Optional: Use build cache for faster rebuilds
          cache-from: type=gha
          cache-to: type=gha,mode=max
